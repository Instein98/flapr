CodeElement, SuspiciousScore
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):175, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):176, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):177, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):178, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):179, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):180, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):181, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):186, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):187, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):188, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):189, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):190, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):191, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):194, 3.4870935026918963
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):164, 3.48632
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):165, 3.48632
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):168, 3.48632
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):169, 3.48632
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):171, 3.48632
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):172, 3.48632
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):196, 3.48632
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#equals(java.lang.Object):86, 3.21426
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#equals(java.lang.Object):77, 3.2137321359549995
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#equals(java.lang.Object):80, 3.2137321359549995
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#equals(java.lang.Object):81, 3.2137321359549995
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#equals(java.lang.Object):84, 3.2137321359549995
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#equals(java.lang.Object):85, 3.2137321359549995
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#equals(java.lang.Object):78, 3.20926
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#equals(java.lang.Object):82, 3.20926
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#equals(java.lang.Object):89, 3.20926
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):134, 2.719243502691896
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):95, 2.71847
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):96, 2.71847
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):99, 2.71847
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):100, 2.71847
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):101, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):102, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):103, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):105, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):106, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):108, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):109, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):111, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):112, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):114, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):115, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):117, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):119, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):121, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):122, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):123, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):126, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):127, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):128, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):129, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):131, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):132, 2.71347
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):146, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):147, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):148, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):149, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):150, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):321, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):322, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):323, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):324, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):325, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):326, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):327, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):329, 2.58905
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):330, 2.58905
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):57, 2.5009621359549996
org.apache.commons.math.util.MathUtils#distance(int[],int[]):1873, 2.4925324829046382
org.apache.commons.math.util.MathUtils#distance(int[],int[]):1874, 2.4925324829046382
org.apache.commons.math.util.MathUtils#distance(int[],int[]):1875, 2.4925324829046382
org.apache.commons.math.util.MathUtils#distance(int[],int[]):1876, 2.4925324829046382
org.apache.commons.math.util.MathUtils#distance(int[],int[]):1878, 2.4925324829046382
org.apache.commons.math.stat.clustering.Cluster#getCenter():71, 2.3881
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#getPoint():52, 1.7904855339059327
org.apache.commons.math.stat.clustering.Cluster#addPoint(org.apache.commons.math.stat.clustering.Clusterable):55, 1.3695
org.apache.commons.math.stat.clustering.Cluster#addPoint(org.apache.commons.math.stat.clustering.Clusterable):56, 1.3695
org.apache.commons.math.util.FastMath#sqrt(double):277, -1.1331008932647373
